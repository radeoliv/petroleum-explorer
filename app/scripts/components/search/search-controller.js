
 /*--------------------------------------------------------------------------------
	Author: ad3sh
	www: http://seangoresht.com/
	github: https://github.com/srsgores

	twitter: http://twitter.com/S.Goresht

	seng515-petroleum-explorer
	Do What the Fuck You Want License

	=============================================================================
	Filename:  
	=============================================================================
	//TODO: file description
-------------------------------------------------------------------------------*/
 // Generated by CoffeeScript 1.7.1
 (function() {
	 var SearchController;

	 SearchController = (function() {
		 /**
		  * constructor for the search controller
		  * @param dataSet object with two fields, UWID(string) and
		  * @param searchQuery
		  * @param resultSet
		  * @constructor
		  */
		 function SearchController(dataSet,resultSet) {
			 this.dataSet = dataSet;
			 console.dir(dataSet);//$.getJSON("../../../../test/mocks/uniqueWellIdentifierData.json", function() {
				 //alert("success");
			 //});

			 this.resultSet = resultSet;
			 if(this.resultSet === null || typeof(this.resultSet) === "undefined"){
				 this.resultSet = [];
			 }
			 this.NULL_ERROR_MESSAGE = "Could not find data, as it was null";
			 this.UNDEFINED_ERROR_MESSAGE = "undefined search query";
			 this.EMPTY_RESULTSET_ERROR_MESSAGE = "0 results found";
			 this.EMPTY_SEARCH_QUERY_ERROR_MESSAGE = "search query is empty";
			 this.NULL_QUERY_ERROR_MESSAGE = "search query is null";
		 }

		 /**
		  * find the UWID matching the search criteria (LSD, range, township, section)
		  * @param query the search query we will use to search through UWID
		  * @returns {string}
		  */
		 SearchController.prototype.findResults = function(lsdQuery,sectionQuery,townshipQuery,rangeQuery) {
			 //TODO: parse JSON file (wells.json)
			 this.resultSet = [];
			 var queryArray=[lsdQuery,sectionQuery,townshipQuery,rangeQuery];
			 for(query in queryArray){
				 if(query === null){
					 return this.NULL_QUERY_ERROR_MESSAGE;
				 }
				 else if(typeof(query) === "undefined"){
					 return this.UNDEFINED_ERROR_MESSAGE;
				 }
				 else if(this.isEmptyQuery(query)){
					 queryArray.pop(query);
					 //return this.EMPTY_SEARCH_QUERY_ERROR_MESSAGE;
				 }
			 }
			 for(var i=0; i<this.dataSet.length;i++){
				// Iterate through queryArray, using && for each member
				/*if(!this.isEmptyQuery(lsdQuery)){
					if ((this.dataSet[i]['UWI'].substr(3,2)) === lsdQuery){
						this.resultSet.push(this.dataSet[i]);
					//TODO: Add other search criteria
					}
				}*/
				 if(townshipQuery === this.dataSet[i]['UWI'].substr(7,3) && rangeQuery === this.dataSet[i]['UWI'].substr(10,2)){
					 if(this.isEmptyQuery(lsdQuery) && this.isEmptyQuery(sectionQuery)){
						 this.resultSet.push(this.dataSet[i]);

					 }else if(this.isEmptyQuery(lsdQuery)) {
						 if(this.dataSet[i]['UWI'].substr(5,2)=== sectionQuery){
							 this.resultSet.push(this.dataSet[i]);
						 }

					 }
					 else if(this.isEmptyQuery(sectionQuery)){
						 if(this.dataSet[i]['UWI'].substr(3,2)=== lsdQuery){
							 this.resultSet.push(this.dataSet[i]);
						 }

					 }
					 else{
						 if(this.dataSet[i]['UWI'].substr(3,2) === lsdQuery && this.dataSet[i]['UWI'].substr(5,2) === sectionQuery){
							 this.resultSet.push(this.dataSet[i]);
					 	}
					}
				 }


			 }
			 // check if any values are empty
			 // for each search input with a valid entry, check contents of coresponding JSON data in this.dataset using && for each
			 // return objects that match
			 if(this.dataSet === null){
				 return this.NULL_ERROR_MESSAGE;
			 }

			/*for(var well in this.dataSet){
				if ((well.UNIQUEWELLID).search(query)){
					resultSet.push(well);
				}
			}*/

			 if(this.resultSet.length<1){
				 return this.EMPTY_RESULTSET_ERROR_MESSAGE;
			 }
			 return this.resultSet;
		 };

		 SearchController.prototype.checkResults = function(){

		 };

		 /**
		  * function retrieving the json file containing the data and sending the result to the attribute dataset of the searchController
		  * @returns {exports|*}
		  */
		 SearchController.prototype.getMockData = function(){
			 this.dataSet = require("../../../../test/mocks/uniqueWellIdentifierDataTest.json");
			 return this.dataSet;
		 };

		 /**
		  * Checks search query for excessive spaces or unaccepted formats.  Returns true if any of formats match.
		  * @param searchQuery
		  */
		 SearchController.prototype.isEmptyQuery = function(searchQuery) {
			//var emptyPattern = new RegExp("\s"),
				//contentPattern = new RegExp("\W");
			 return (searchQuery).trim() === ""; //this.searchQuery.search(emptyPattern) && !(this.searchQuery.search(contentPattern));

		 };

		 return SearchController;

	 })();

	 (typeof exports !== "undefined" && exports !== null ? exports : window).SearchController = SearchController;

 }).call(this);